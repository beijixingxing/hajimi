name: Docker镜像构建及上游同步

on:
  # 触发条件配置
  push:
    branches: [main]
    tags: ['v*.*.*']
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次
  workflow_dispatch:    # 支持手动触发

permissions:
  contents: write       # 同步任务需要写权限

jobs:
  # =================================================================
  # Docker镜像构建任务
  # =================================================================
  build-and-push:
    name: 构建推送Docker镜像
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          path: src

      - name: 验证同步后版本
        run: |
          cd src
          echo "当前版本: $(grep -oP 'version=\K.*' version.txt)"
          if [ ! -f version.txt ]; then
            echo "::error::version.txt 文件不存在"
            exit 1
          fi
      - name: 读取版本号
        id: version
        run: |
          cd src
          VERSION=$(grep -oP 'version=\K.*' version.txt)
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "镜像版本: v$VERSION"
      - name: 压缩应用文件
        run: |
          cd src/app
          zip -r ../app.zip *
          echo "压缩包内容预览:"
          unzip -l ../app.zip | head -10
      - name: 准备构建上下文
        run: |
          mkdir -p docker_build
          cp src/app.zip docker_build/
          cp src/Dockerfile docker_build/
          cp src/requirements.txt docker_build/
          cp src/version.txt docker_build/
          echo "构建上下文准备完成"
      - name: 配置Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 生成镜像标签
        id: tags
        uses: docker/metadata-action@v5
        with:
          images: beijixingxing/hajimi
          tags: |
            type=raw,value=latest
            type=raw,value=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || steps.version.outputs.version }}
      - name: 构建推送镜像
        uses: docker/build-push-action@v5
        with:
          context: docker_build
          file: docker_build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.tags.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 构建完成通知
        if: ${{ always() }}
        run: |
          echo “Docker镜像构建推送完成”
          echo “标签： ${{ steps.tags.outputs.tags }}”

name: Docker镜像构建及推送

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次
  workflow_dispatch:    # 支持手动触发

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: 构建并推送Docker镜像
    runs-on: ubuntu-latest

    steps:
      # ----------------------------
      # 检出代码
      # ----------------------------
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          path: src

      # ----------------------------
      # 验证版本号
      # ----------------------------
      - name: 验证版本号
        run: |
          if [ ! -f src/version.txt ]; then
            echo "::error::version.txt 文件不存在"
            exit 1
          fi
          VERSION=$(grep -oP 'version=\K.*' src/version.txt)
          if [ -z "$VERSION" ]; then
            echo "::error::version.txt 文件格式不正确，应为 version=x.x.x"
            exit 1
          fi
          echo "当前版本: $VERSION"

      # ----------------------------
      # 压缩应用文件
      # ----------------------------
      - name: 压缩应用文件
        run: |
          cd src/app
          zip -r ../app.zip *
          echo "压缩包内容预览:"
          unzip -l ../app.zip | head -10

      # ----------------------------
      # 准备构建上下文
      # ----------------------------
      - name: 准备构建上下文
        run: |
          mkdir -p docker_build
          cp src/app.zip docker_build/
          cp src/Dockerfile docker_build/
          cp src/requirements.txt docker_build/
          cp src/version.txt docker_build/
          echo "构建上下文准备完成"

      # ----------------------------
      # 配置Docker Buildx
      # ----------------------------
      - name: 配置Buildx
        uses: docker/setup-buildx-action@v3

      # ----------------------------
      # 登录Docker Hub
      # ----------------------------
      - name: 登录Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ----------------------------
      # 生成镜像标签
      # ----------------------------
      - name: 生成镜像标签
        id: tags
        uses: docker/metadata-action@v5
        with:
          images: beijixingxing/hajimi
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}

      # ----------------------------
      # 构建Docker镜像
      # ----------------------------
      - name: 构建Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: docker_build
          file: docker_build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false  # 先构建，不推送
          tags: ${{ steps.tags.outputs.tags }}

      # ----------------------------
      # 推送Docker镜像
      # ----------------------------
      - name: 推送Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: docker_build
          file: docker_build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true  # 推送镜像
          tags: ${{ steps.tags.outputs.tags }}

      # ----------------------------
      # 构建完成通知
      # ----------------------------
      - name: 构建完成通知
        if: ${{ always() }}
        run: |
          echo "Docker镜像构建推送完成"
          echo "标签: ${{ steps.tags.outputs.tags }}"
